$(document).ready(function () {
    //$("#sole-input").bind('keypress', function (event) {
    $("#sole-input").keypress(function (event) {
        if (event.keyCode == 13) {
            $("#search-button").click();
         }
    });  
    $("input").on({
        blur: function () { this.placeholder = "查找河流(涌)、设施等"; }
    });
    var toggle = true;
    $("#search-button").on("click", function () {
        //if (toggle) {
        //    $("#search").animate({ width: "335px" }, 1000);
        //    $("#inputBox").animate({ width: "80%" }, 1000);
        //    toggle = false;
        //}
        //else {
        //    $("#search").animate({ width: "58px" }, 1000);
        //    $("#inputBox").animate({ width: "0" }, 1000);
        //    toggle = true;
        //}
        layerQuery();
        $("#toggleLayer").addClass("icon-up").removeClass("icon-bottom");
        mark = false;
    });
    var mark = true;
    $("#toggleLayer").click(function () {
        if (mark) {
            $("#selectLayer").slideDown("slow");
            $(this).addClass("icon-up").removeClass("icon-bottom");
            mark = false;
        } else {
            $("#selectLayer").slideUp("slow");
            $(this).addClass("icon-bottom").removeClass("icon-up");
            mark = true;
        }
        closeInfo();
    });

    /*工具栏弹出框*/
    $(".down").each(function (i, obj) {
        $(obj).hover(
			function () {
			    $(this).find("ul").stop(true, true).fadeIn();
			},
			function () {
			    $(this).find("ul").stop(true, true).fadeOut();
			}
		);
    });
    $("#list1").each(function (i, obj) {
        $(obj).find("a").on("click", function () {
            $(this).parent().addClass("highlight").siblings().removeClass("highlight");
            var measureName = $(this).text();
            switch (measureName) {
                case "测线":
                    break;
                case "测面":
                    break;
            }
        });
    });
    $("#list2").each(function (i, obj) {
        $(obj).find("a").on("click", function () {
            $(this).parent().addClass("highlight").siblings().removeClass("highlight");
        });
    });
    //文字点击事件
    $("#list3").each(function (i, obj) {
        $( obj ).find( "a" ).on( "click", function ()
        {
            $( this ).parent().addClass( "highlight" ).siblings().removeClass( "highlight" );
            //var checkStatues = $(this).siblings().find("input[type=checkbox]").is(':checked');
            //if(checkStatues === true){
            //	$(this).siblings().find("input[type=checkbox]").prop("checked",false);
            //}else if(checkStatues === false){
            //	$(this).siblings().find("input[type=checkbox]").prop("checked",true);
            //};

            if ( $( this ).attr( "class" ) == "dituLayer" )
            {//底图控制双图层并联动卫星影像
                var layer = map.getLayer( "dituDLayer" );
                layer.setVisibility( !layer.visible );
                var layer = map.getLayer( "dituTLayer" );
                layer.setVisibility( !layer.visible );
                $( this ).siblings().find( "input[type=checkbox]" ).prop( "checked", layer.visible );
                var layer = map.getLayer( "weixingyingxiangLayer" );
                layer.setVisibility( !layer.visible );
                $( "a.weixingyingxiangLayer" ).siblings().find( "input[type=checkbox]" ).prop( "checked", layer.visible );
            } else if ( $( this ).attr( "class" ) == "weixingyingxiangLayer" )
            {//卫星影像联动底图
                var layer = map.getLayer( "weixingyingxiangLayer" );
                layer.setVisibility( !layer.visible );
                $( this ).siblings().find( "input[type=checkbox]" ).prop( "checked", layer.visible );
                var layer = map.getLayer( "dituDLayer" );
                layer.setVisibility( !layer.visible );
                var layer = map.getLayer( "dituTLayer" );
                layer.setVisibility( !layer.visible );
                $( "a.dituLayer" ).siblings().find( "input[type=checkbox]" ).prop( "checked", layer.visible );
            } else
            {//简单开关
                var layer = map.getLayer( $( this ).attr( "class" ) );
                layer.setVisibility( !layer.visible );
                $( this ).siblings().find( "input[type=checkbox]" ).prop( "checked", layer.visible );
            }
        
            //if (true) {
            //    var layer = map.getLayer($(this).attr("class"));
            //    layer.setVisibility(!layer.visible);
            //    $(this).siblings().find("input[type=checkbox]").prop("checked", layer.visible);
            //}
        });
    });
    $("#list4").each(function (i, obj) {
        $(obj).find("a").on("click", function () {
            $(this).parent().addClass("highlight").siblings().removeClass("highlight");
        });
    });

    $("#list5").each(function (i, obj) {
        $(obj).find("a").on("click", function () {
            $(this).parent().addClass("highlight").siblings().removeClass("highlight");
        });
    });
    //按钮点击
    $("input").filter('.layerSwitch').each(function (i, obj) {
        $( obj ).on( "click", function ()
        {
            var parParent = $( obj ).parent().parent();
            parParent.addClass( "highlight" ).siblings().removeClass( "highlight" );
            var aEle = parParent.find( "a" );
            if ( aEle.attr( "class" ) == "dituLayer" )
            {
                var layer = map.getLayer( "dituDLayer" );
                layer.setVisibility( !layer.visible );
                var layer = map.getLayer( "dituTLayer" );
                layer.setVisibility( !layer.visible );
                $(obj).prop("checked", layer.visible);
                var layer = map.getLayer( "weixingyingxiangLayer" );
                layer.setVisibility( !layer.visible );
                $( "a.weixingyingxiangLayer" ).siblings().find( "input[type=checkbox]" ).prop( "checked", layer.visible );
            } else if ( aEle.attr( "class" ) == "weixingyingxiangLayer" )
            {
                var layer = map.getLayer( "weixingyingxiangLayer" );
                layer.setVisibility( !layer.visible );
                $(obj).prop("checked", layer.visible);
                var layer = map.getLayer( "dituDLayer" );
                layer.setVisibility( !layer.visible );
                var layer = map.getLayer( "dituTLayer" );
                layer.setVisibility( !layer.visible );
                $( "a.dituLayer" ).siblings().find( "input[type=checkbox]" ).prop( "checked", layer.visible );
            }
            else
            {
                var layer = map.getLayer( aEle.attr( "class" ) );
                layer.setVisibility( !layer.visible );
            }
            
        });
    });

    $(".layerStyle").each(function (i, obj) {
        $(obj).find("a").on("click", function (obj) {
            $(this).parent().addClass("highlight").siblings().removeClass("highlight");
        });
    });

    $("#mapType").hover(
		function () {
		    $("#mapType-wrapper").addClass("expand");
		},
		function () {
		    $("#mapType-wrapper").removeClass("expand");
		}
	)
    $("[data-name]").on("click", function () {
        var actionName = $(this).data("name");
        switch (actionName) {
            case "normalMap":
                layerVisible(shiliangLayer, true);
                layerVisible(yingxiangLayer, false);
                break;
            case "earth":
                layerVisible(shiliangLayer, false);
                layerVisible(yingxiangLayer, true);
                break;
        }
        $(this).addClass("active").siblings().removeClass("active");
    });
    $("#closeExpand").bind("click", function () {
        closeInfo();
    });
    $("#closeAll").bind("click", function () {
        $(".allInfoBox").hide();
    });
    $("#extentResultCloseAll").bind("click", function () {
        $("#extentResultWindow").hide();
    });
});
function showData() {
    $(".expandBox").animate({ width: "25em" }, "slow");
}
function closeInfo() {
    $(".expandBox").animate({ width: "0em" }, "slow");
}